    warning: missing parentheses for expression following "do:" keyword. Parentheses are required to solve ambiguity inside keywords.

    This error happens when you have function calls without parentheses inside keywords. For example:

        function(arg, one: nested_call a, b, c)
        function(arg, one: if expr, do: :this, else: :that)

    In the examples above, we don't know if the arguments "b" and "c" apply to the function "function" or "nested_call". Or if the keywords "do" and "else" apply to the function "function" or "if". You can solve this by explicitly adding parentheses:

        function(arg, one: if(expr, do: :this, else: :that))
        function(arg, one: nested_call(a, b, c))

    Ambiguity found at:
    │
 10 │   def beb_broadcast(dest, m), do: for p <- dest, do: unicast(p, m)
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ utils.ex:10

    warning: redefining module Utils (current version loaded from Elixir.Utils.beam)
    │
  1 │ defmodule Utils do
    │ ~~~~~~~~~~~~~~~~~~
    │
    └─ utils.ex:1: Utils (module)

    warning: redefining module Paxos (current version loaded from Elixir.Paxos.beam)
    │
 22 │   defmodule Paxos do
    │   ~~~~~~~~~~~~~~~~~~
    │
    └─ paxos.ex:22: Paxos (module)

    warning: variable "leader" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 41 │       leader = Leader_election.start(name, participants)
    │       ~~~~~~
    │
    └─ paxos.ex:41:7: Paxos.init/2

     warning: variable "k" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 156 │                   state = if Enum.all?(state.instance_state[instance_num].a_val_list, fn {k, v} -> v == nil end) do
     │                                                                                           ~
     │
     └─ paxos.ex:156:91: Paxos.run/1

     warning: variable "a_bal" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 171 │                       {a_bal, a_val} = Enum.reduce( state.instance_state[instance_num].a_val_list, {0, nil}, fn {k,v}, acc ->
     │                        ~
     │
     └─ paxos.ex:171:24: Paxos.run/1

     warning: variable "b" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 217 │         {:accepted, instance_num, b} ->
     │                                   ~
     │
     └─ paxos.ex:217:35: Paxos.run/1

     warning: variable "t" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 251 │         {:get_decision, instance_num, t, parent_process} ->
     │                                       ~
     │
     └─ paxos.ex:251:39: Paxos.run/1

     warning: variable "result" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 286 │       result = receive do {:decision_responce, v} ->
     │       ~~~~~~
     │
     └─ paxos.ex:286:7: Paxos.get_decision/3

     warning: variable "result" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 302 │       result = receive do {:propose_responce, v} ->
     │       ~~~~~~
     │
     └─ paxos.ex:302:7: Paxos.propose/4

    warning: redefining module Leader_election (current version loaded from Elixir.Leader_election.beam)
    │
  1 │ defmodule Leader_election do
    │ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ leader_election.ex:1: Leader_election (module)

    warning: missing parentheses for expression following "do:" keyword. Parentheses are required to solve ambiguity inside keywords.

    This error happens when you have function calls without parentheses inside keywords. For example:

        function(arg, one: nested_call a, b, c)
        function(arg, one: if expr, do: :this, else: :that)

    In the examples above, we don't know if the arguments "b" and "c" apply to the function "function" or "nested_call". Or if the keywords "do" and "else" apply to the function "function" or "if". You can solve this by explicitly adding parentheses:

        function(arg, one: if(expr, do: :this, else: :that))
        function(arg, one: nested_call(a, b, c))

    Ambiguity found at:
    │
 70 │     def proc_names(config), do: for {name, _} <- config, do: name
    │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test_harness.ex:70

    warning: missing parentheses for expression following "do:" keyword. Parentheses are required to solve ambiguity inside keywords.

    This error happens when you have function calls without parentheses inside keywords. For example:

        function(arg, one: nested_call a, b, c)
        function(arg, one: if expr, do: :this, else: :that)

    In the examples above, we don't know if the arguments "b" and "c" apply to the function "function" or "nested_call". Or if the keywords "do" and "else" apply to the function "function" or "if". You can solve this by explicitly adding parentheses:

        function(arg, one: if(expr, do: :this, else: :that))
        function(arg, one: nested_call(a, b, c))

    Ambiguity found at:
    │
 71 │     def nodes(config), do: for {_, {node, _}} <- config, node != :local, do: node
    │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test_harness.ex:71

    warning: redefining module TestHarness (current version loaded from Elixir.TestHarness.beam)
    │
  1 │ defmodule TestHarness do
    │ ~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test_harness.ex:1: TestHarness (module)

    warning: redefining module PaxosTest (current version loaded from Elixir.PaxosTest.beam)
    │
  1 │ defmodule PaxosTest do
    │ ~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ paxos_test.ex:1: PaxosTest (module)

    warning: redefining module UUID (current version loaded from Elixir.UUID.beam)
    │
  1 │ defmodule UUID do
    │ ~~~~~~~~~~~~~~~~~
    │
    └─ uuid.ex:1: UUID (module)

    warning: use Bitwise is deprecated. import Bitwise instead
    │
  2 │   use Bitwise, only_operators: true
    │   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    │
    └─ uuid.ex:2: UUID (module)

    warning: redefining module TestUtil (current version loaded from Elixir.TestUtil.beam)
    │
  1 │ defmodule TestUtil do
    │ ~~~~~~~~~~~~~~~~~~~~~
    │
    └─ test_util.ex:1: TestUtil (module)

============
"One non-leader crashes, no concurrent ballots, 3 nodes", 10 times
============
:p2: started
:p1: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p3 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.109.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p2, parent_name: nil, participants: [:p3, :p1, :p2]}
p2 - [a_val == nil] Setting v <- {:val, 201} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p3 - sending to parent process #PID<0.109.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p2: decided {:val, 201}
p3: decided {:val, 201}
p3: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p1: started
:p2: started
:p3: started
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.109.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p2, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p3 - sending to parent process #PID<0.109.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p1: decided {:val, 201}
p3: decided {:val, 201}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p1: started
:p3: started
:p2: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.116.0>
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p2 - p2 has started a ballot! b-0
p3 - has updated instance_num 1
p2 - sending a prepared to leader! | leader: :p2
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p3 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p3 - sending a prepared to leader! | leader: :p2
p2 - Quorum: 2
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 -` Quorum Met! 2 state - %{name: :p2, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p2, parent_name: #PID<0.116.0>, participants: [:p2, :p1, :p3]}
p2 - [a_val == nil] Setting v <- {:val, 209} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 209}
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.116.0>
p2 - sending to parent process #PID<0.116.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3: decided {:val, 209}
p2: decided {:val, 209}
p3: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p1: started
:p3: started
:p2: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.116.0>
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p1 - has updated instance_num 1
p2 - proposal recieved v: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p2, :p3, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.116.0>
p2 - sending to parent process #PID<0.116.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p1: decided {:val, 209}
p2: decided {:val, 209}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.116.0>
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - has updated instance_num 1
p2 - Quorum: 1
p3 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p3 - sending a prepared to leader! | leader: :p2
p2 - Quorum: 2
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 -` Quorum Met! 2 state - %{name: :p2, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p2, parent_name: #PID<0.116.0>, participants: [:p2, :p1, :p3]}
p2 - [a_val == nil] Setting v <- {:val, 209} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 209}
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.116.0>
p2 - sending to parent process #PID<0.116.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.109.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p2, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p3 - sending to parent process #PID<0.109.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p1: decided {:val, 201}
p3: decided {:val, 201}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p3: started
:p1: started
:p2: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.116.0>
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - has updated instance_num 1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p2 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 1
p1 - Quorum: 2
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 2 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.116.0>, participants: [:p1, :p3, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.116.0>
p1 - sending to parent process #PID<0.116.0> value {:val, 208}
returning v in :propose_responce {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2: decided {:val, 208}
p1: decided {:val, 208}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p3: started
:p2: started
:p1: started
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.116.0>
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p3 - has updated instance_num 1
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has recieved a proposal of val: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p1 - Quorum: 1
p3 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 2
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 2 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.116.0>, participants: [:p1, :p2, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.116.0>
p1 - sending to parent process #PID<0.116.0> value {:val, 208}
returning v in :propose_responce {:val, 208}
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3: decided {:val, 208}
p1: decided {:val, 208}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p1: started
:p2: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p3 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.109.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p2, parent_name: nil, participants: [:p3, :p1, :p2]}
p2 - [a_val == nil] Setting v <- {:val, 201} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p3 - sending to parent process #PID<0.109.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p2: decided {:val, 201}
p3: decided {:val, 201}
p3: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p1: started
:p2: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p3 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.109.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 2, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p2, parent_name: nil, participants: [:p3, :p1, :p2]}
p2 - [a_val == nil] Setting v <- {:val, 201} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p3 - sending to parent process #PID<0.109.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p2: decided {:val, 201}
p3: decided {:val, 201}
p3: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
============

============
"One non-leader crashes, no concurrent ballots, 3 local procs", 10 times
============
:p2: started
:p1: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.278.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p3 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, participants: [:p2, :p1, :p3], leader: :p2, parent_name: #PID<0.278.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p2 - [a_val == nil] Setting v <- {:val, 209} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 209}
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.278.0>
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - sending to parent process #PID<0.278.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p3: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.288.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p3 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, participants: [:p2, :p1, :p3], leader: :p2, parent_name: #PID<0.288.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p2 - [a_val == nil] Setting v <- {:val, 209} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 209}
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.288.0>
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - sending to parent process #PID<0.288.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p3: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p3: started
:p2: started
:p1: started
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.298.0>
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 210}
p1 - has recieved a proposal of val: {:val, 210}
p3 - proposal recieved v: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, participants: [:p3, :p2, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p3 - p3 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: nil
p3 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.298.0>
p3 - sending to parent process #PID<0.298.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p1: decided {:val, 210}
p3: decided {:val, 210}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p2: started
:p3: started
:p1: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.308.0>
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, participants: [:p2, :p3, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.308.0>
p2 - sending to parent process #PID<0.308.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p1: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p3: started
:p1: started
:p2: started
p3 - Leader p2 is the new leader!
p2 - Leader p2 is the new leader!
p3 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.318.0>
p3 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 210}
p2 - has recieved a proposal of val: {:val, 210}
p3 - proposal recieved v: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, participants: [:p3, :p1, :p2], leader: :p2, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p2 - [a_val == nil] Setting v <- {:val, 210} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p3 - p3 has accepted bal: 1 | v: {:val, 210}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 210}
p2 - Updated Map %{1 => {:val, 210}} | Parent: nil
p3 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.318.0>
p3 - sending to parent process #PID<0.318.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p2: decided {:val, 210}
p3: decided {:val, 210}
p3: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p1: started
:p3: started
:p2: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.328.0>
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 208}
p2 - has recieved a proposal of val: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, participants: [:p1, :p3, :p2], leader: :p1, parent_name: #PID<0.328.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.328.0>
p2 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - sending to parent process #PID<0.328.0> value {:val, 208}
returning v in :propose_responce {:val, 208}
p2: decided {:val, 208}
p1: decided {:val, 208}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.338.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p3 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p2 - p2 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 -` Quorum Met! 2 state - %{name: :p2, participants: [:p2, :p1, :p3], leader: :p2, parent_name: #PID<0.338.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p2 - [a_val == nil] Setting v <- {:val, 209} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p2 - Quorum 2 Met! cnt: 2
p2 is sending decision {:val, 209}
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.338.0>
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - sending to parent process #PID<0.338.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p3: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p1: started
:p3: started
:p2: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.348.0>
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 208}
p2 - has recieved a proposal of val: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, participants: [:p1, :p3, :p2], leader: :p1, parent_name: #PID<0.348.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.348.0>
p2 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - sending to parent process #PID<0.348.0> value {:val, 208}
returning v in :propose_responce {:val, 208}
p2: decided {:val, 208}
p1: decided {:val, 208}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p2: started
:p3: started
:p1: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.358.0>
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, participants: [:p2, :p3, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.358.0>
p2 - sending to parent process #PID<0.358.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p1: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p1: started
:p3: started
:p2: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.368.0>
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 208}
p2 - has recieved a proposal of val: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 -` Quorum Met! 2 state - %{name: :p1, participants: [:p1, :p3, :p2], leader: :p1, parent_name: #PID<0.368.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil], quorums: 2}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 2
p1 is sending decision {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.368.0>
p2 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - sending to parent process #PID<0.368.0> value {:val, 208}
returning v in :propose_responce {:val, 208}
p2: decided {:val, 208}
p1: decided {:val, 208}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
============

============
"Minority non-leader crashes, no concurrent ballots", 10 times
============
:p4: started
:p1: started
:p3: started
:p5: started
:p2: started
p3 - Leader p2 is the new leader!
p4 - Leader p2 is the new leader!
p2 - Leader p2 is the new leader!
p3 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 202}
p3 - proposal recieved v: {:val, 202}
p4 - has updated instance_num 1
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 202}
p2 - proposal recieved v: {:val, 202}
p2 - p2 has started a ballot! b-0
p4 - has recieved a proposal of val: {:val, 202}
p2 - sending a prepared to leader! | leader: :p2
p4 - proposal recieved v: {:val, 202}
p4 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 - Quorum: 3
p4 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 -` Quorum Met! 3 state - %{name: :p2, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p2, parent_name: nil, participants: [:p3, :p1, :p5, :p2, :p4]}
p2 - [a_val == nil] Setting v <- {:val, 202} 
p2 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p2 - Quorum 2 Met! cnt: 3
p2 is sending decision {:val, 202}
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p4: decided {:val, 202}
p2: decided {:val, 202}
p3: decided {:val, 202}
p2: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p1: started
:p2: started
:p3: started
:p5: started
:p4: started
p4 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p1 - p1 has started a ballot! b-0
p5 - has updated instance_num 1
p1 - sending a prepared to leader! | leader: :p1
p4 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 202}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - proposal recieved v: {:val, 202}
p4 - has recieved a proposal of val: {:val, 202}
p1 - Quorum: 1
p4 - proposal recieved v: {:val, 202}
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 2
p1 - Quorum: 3
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p1, :p3, :p2, :p5, :p4]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5: decided {:val, 202}
p4: decided {:val, 202}
p1: decided {:val, 202}
p1: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
PASS
:p2: started
:p3: started
:p1: started
:p4: started
:p5: started
p3 - Leader p3 is the new leader!
p4 - Leader p3 is the new leader!
p5 - Leader p3 is the new leader!
p3 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 202}
p4 - has updated instance_num 1
p3 - proposal recieved v: {:val, 202}
p3 - p3 has started a ballot! b-0
p5 - has updated instance_num 1
p3 - sending a prepared to leader! | leader: :p3
p5 - has recieved a proposal of val: {:val, 202}
p4 - has recieved a proposal of val: {:val, 202}
p4 - proposal recieved v: {:val, 202}
p3 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p5 - proposal recieved v: {:val, 202}
p3 - Quorum: 1
p4 - sending a prepared to leader! | leader: :p3
p5 - sending a prepared to leader! | leader: :p3
p3 - Quorum: 2
p3 - Quorum: 3
p5 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p3 -` Quorum Met! 3 state - %{name: :p3, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p3, parent_name: #PID<0.126.0>, participants: [:p3, :p1, :p2, :p4, :p5]}
p3 - [a_val == nil] Setting v <- {:val, 202} 
p3 - has sent to participants to accept
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p3 - Quorum 2 Met! cnt: 3
p3 is sending decision {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4: decided {:val, 202}
p5: decided {:val, 202}
p3: decided {:val, 202}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
PASS
:p1: started
:p4: started
:p2: started
:p3: started
:p5: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p5 - with 1 has proposed {:val, 205} to the leader! Broad-Parent: #PID<0.109.0>
p5 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 205}
p2 - has updated instance_num 1
p5 - proposal recieved v: {:val, 205}
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 205}
p1 - has recieved a proposal of val: {:val, 205}
p2 - proposal recieved v: {:val, 205}
p1 - proposal recieved v: {:val, 205}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 205}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p4, :p3, :p2, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 205} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 205}
p5 - p5 has accepted bal: 1 | v: {:val, 205}
p2 - p2 has accepted bal: 1 | v: {:val, 205}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 205}
p1 - Updated Map %{1 => {:val, 205}} | Parent: nil
p2 - Updated Map %{1 => {:val, 205}} | Parent: nil
p5 - Updated Map %{1 => {:val, 205}} | Parent: #PID<0.109.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 205}
returning v in :propose_responce {:val, 205}
p1: decided {:val, 205}
p2: decided {:val, 205}
p5: decided {:val, 205}
p1: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p3: started
:p1: started
:p2: started
:p5: started
:p4: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.126.0>
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p2, :p5, :p4, :p1, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p3: decided {:val, 209}
p1: decided {:val, 209}
p2: decided {:val, 209}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p2: started
:p3: started
:p5: started
:p1: started
:p4: started
p4 - Leader p3 is the new leader!
p3 - Leader p3 is the new leader!
p5 - Leader p3 is the new leader!
p3 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 202}
p4 - has updated instance_num 1
p3 - proposal recieved v: {:val, 202}
p3 - p3 has started a ballot! b-0
p3 - sending a prepared to leader! | leader: :p3
p3 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p5 - has updated instance_num 1
p3 - Quorum: 1
p5 - has recieved a proposal of val: {:val, 202}
p4 - has recieved a proposal of val: {:val, 202}
p5 - proposal recieved v: {:val, 202}
p4 - proposal recieved v: {:val, 202}
p5 - sending a prepared to leader! | leader: :p3
p4 - sending a prepared to leader! | leader: :p3
p3 - Quorum: 2
p3 - Quorum: 3
p4 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p3 -` Quorum Met! 3 state - %{name: :p3, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p3, parent_name: #PID<0.126.0>, participants: [:p3, :p1, :p2, :p4, :p5]}
p3 - [a_val == nil] Setting v <- {:val, 202} 
p3 - has sent to participants to accept
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p3 - Quorum 2 Met! cnt: 3
p3 is sending decision {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5: decided {:val, 202}
p4: decided {:val, 202}
p3: decided {:val, 202}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
PASS
:p4: started
:p3: started
:p1: started
:p2: started
:p5: started
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 202}
p4 - has updated instance_num 1
p3 - proposal recieved v: {:val, 202}
p1 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 202}
p4 - proposal recieved v: {:val, 202}
p1 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p2, :p5, :p4, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p4: decided {:val, 202}
p1: decided {:val, 202}
p3: decided {:val, 202}
p1: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
PASS
:p3: started
:p4: started
:p2: started
:p1: started
:p5: started
p4 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p4 - with 1 has proposed {:val, 203} to the leader! Broad-Parent: #PID<0.126.0>
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 203}
p1 - has updated instance_num 1
p4 - proposal recieved v: {:val, 203}
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 203}
p2 - proposal recieved v: {:val, 203}
p1 - has recieved a proposal of val: {:val, 203}
p1 - proposal recieved v: {:val, 203}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 203}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p5, :p3, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 203} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 203}
p2 - p2 has accepted bal: 1 | v: {:val, 203}
p4 - p4 has accepted bal: 1 | v: {:val, 203}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 203}
p1 - Updated Map %{1 => {:val, 203}} | Parent: nil
p4 - Updated Map %{1 => {:val, 203}} | Parent: #PID<0.126.0>
p2 - Updated Map %{1 => {:val, 203}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 203}
returning v in :propose_responce {:val, 203}
p2: decided {:val, 203}
p1: decided {:val, 203}
p4: decided {:val, 203}
p1: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p4: started
:p2: started
:p3: started
:p5: started
:p1: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p5 - has recieved a proposal of val: {:val, 202}
p5 - proposal recieved v: {:val, 202}
p5 - sending a prepared to leader! | leader: :p1
p2 - has recieved a proposal of val: {:val, 202}
p2 - proposal recieved v: {:val, 202}
p1 - Quorum: 2
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 3
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p1, :p3, :p4, :p5, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2: decided {:val, 202}
p5: decided {:val, 202}
p1: decided {:val, 202}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
PASS
:p3: started
:p1: started
:p4: started
:p2: started
:p5: started
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 202}
p3 - proposal recieved v: {:val, 202}
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - has recieved a proposal of val: {:val, 202}
p1 - Quorum: 1
p5 - proposal recieved v: {:val, 202}
p1 - Quorum: 2
p5 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 3
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p2, :p4, :p5, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
returning v in :propose_responce {:val, 202}
p1: decided {:val, 202}
p5: decided {:val, 202}
p3: decided {:val, 202}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
============

============
"Minority non-leader crashes, no concurrent ballots", 10 times
============
:p5: started
:p4: started
:p1: started
:p2: started
:p3: started
p5 - Leader p2 is the new leader!
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p5 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.538.0>
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 210}
p2 - has recieved a proposal of val: {:val, 210}
p3 - has recieved a proposal of val: {:val, 210}
p5 - proposal recieved v: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p3 - proposal recieved v: {:val, 210}
p2 - p2 has started a ballot! b-0
p5 - sending a prepared to leader! | leader: :p2
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p5 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 - Quorum: 3
p2 -` Quorum Met! 3 state - %{name: :p2, participants: [:p5, :p4, :p1, :p2, :p3], leader: :p2, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p2 - [a_val == nil] Setting v <- {:val, 210} 
p2 - has sent to participants to accept
p5 - p5 has accepted bal: 1 | v: {:val, 210}
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p3 - p3 has accepted bal: 1 | v: {:val, 210}
p2 - Quorum 2 Met! cnt: 3
p2 is sending decision {:val, 210}
p5 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.538.0>
p2 - Updated Map %{1 => {:val, 210}} | Parent: nil
p3 - Updated Map %{1 => {:val, 210}} | Parent: nil
p5 - sending to parent process #PID<0.538.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p2: decided {:val, 210}
p3: decided {:val, 210}
p5: decided {:val, 210}
p5: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p1: started
:p3: started
:p4: started
:p5: started
:p2: started
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.554.0>
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 210}
p5 - has recieved a proposal of val: {:val, 210}
p2 - has recieved a proposal of val: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p5 - proposal recieved v: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p1, :p3, :p4, :p5, :p2], leader: :p1, parent_name: #PID<0.554.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p5 - p5 has accepted bal: 1 | v: {:val, 210}
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.554.0>
p5 - Updated Map %{1 => {:val, 210}} | Parent: nil
p2 - Updated Map %{1 => {:val, 210}} | Parent: nil
p1 - sending to parent process #PID<0.554.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p5: decided {:val, 210}
p2: decided {:val, 210}
p1: decided {:val, 210}
p1: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p1: started
:p4: started
:p5: started
:p2: started
:p3: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.570.0>
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 210}
p2 - has recieved a proposal of val: {:val, 210}
p3 - has recieved a proposal of val: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p3 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p1, :p4, :p5, :p2, :p3], leader: :p1, parent_name: #PID<0.570.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p3 - p3 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.570.0>
p2 - Updated Map %{1 => {:val, 210}} | Parent: nil
p3 - Updated Map %{1 => {:val, 210}} | Parent: nil
p1 - sending to parent process #PID<0.570.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p2: decided {:val, 210}
p3: decided {:val, 210}
p1: decided {:val, 210}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p4: started
:p5: started
:p1: started
:p2: started
:p3: started
p4 - Leader p2 is the new leader!
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p4 - with 1 has proposed {:val, 204} to the leader! Broad-Parent: #PID<0.586.0>
p4 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 204}
p2 - has recieved a proposal of val: {:val, 204}
p3 - has recieved a proposal of val: {:val, 204}
p4 - proposal recieved v: {:val, 204}
p2 - proposal recieved v: {:val, 204}
p3 - proposal recieved v: {:val, 204}
p2 - p2 has started a ballot! b-0
p4 - sending a prepared to leader! | leader: :p2
p2 - sending a prepared to leader! | leader: :p2
p3 - sending a prepared to leader! | leader: :p2
p4 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p2
                  b - 1 | a_bal -  | a_val -  
p2 - Quorum: 1
p2 - Quorum: 2
p2 - Quorum: 3
p2 -` Quorum Met! 3 state - %{name: :p2, participants: [:p4, :p5, :p1, :p2, :p3], leader: :p2, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 204}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p2 - [a_val == nil] Setting v <- {:val, 204} 
p2 - has sent to participants to accept
p4 - p4 has accepted bal: 1 | v: {:val, 204}
p2 - p2 has accepted bal: 1 | v: {:val, 204}
p3 - p3 has accepted bal: 1 | v: {:val, 204}
p2 - Quorum 2 Met! cnt: 3
p2 is sending decision {:val, 204}
p4 - Updated Map %{1 => {:val, 204}} | Parent: #PID<0.586.0>
p2 - Updated Map %{1 => {:val, 204}} | Parent: nil
p3 - Updated Map %{1 => {:val, 204}} | Parent: nil
p4 - sending to parent process #PID<0.586.0> value {:val, 204}
returning v in :propose_responce {:val, 204}
p2: decided {:val, 204}
p3: decided {:val, 204}
p4: decided {:val, 204}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p5: started
:p3: started
:p2: started
:p4: started
:p1: started
p5 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.602.0>
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 210}
p4 - has recieved a proposal of val: {:val, 210}
p1 - has recieved a proposal of val: {:val, 210}
p5 - proposal recieved v: {:val, 210}
p4 - proposal recieved v: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p5, :p3, :p2, :p4, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p5 - p5 has accepted bal: 1 | v: {:val, 210}
p4 - p4 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: nil
p5 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.602.0>
p4 - Updated Map %{1 => {:val, 210}} | Parent: nil
p5 - sending to parent process #PID<0.602.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p4: decided {:val, 210}
p1: decided {:val, 210}
p5: decided {:val, 210}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p1: started
:p5: started
:p2: started
:p4: started
:p3: started
p1 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.618.0>
p1 - has updated instance_num 1
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 210}
p4 - has recieved a proposal of val: {:val, 210}
p3 - has recieved a proposal of val: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p4 - proposal recieved v: {:val, 210}
p3 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p1, :p5, :p2, :p4, :p3], leader: :p1, parent_name: #PID<0.618.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p4 - p4 has accepted bal: 1 | v: {:val, 210}
p3 - p3 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.618.0>
p4 - Updated Map %{1 => {:val, 210}} | Parent: nil
p3 - Updated Map %{1 => {:val, 210}} | Parent: nil
p1 - sending to parent process #PID<0.618.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p4: decided {:val, 210}
p3: decided {:val, 210}
p1: decided {:val, 210}
p1: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p4: started
:p1: started
:p2: started
:p3: started
:p5: started
p4 - Leader p3 is the new leader!
p3 - Leader p3 is the new leader!
p5 - Leader p3 is the new leader!
p4 - with 1 has proposed {:val, 204} to the leader! Broad-Parent: #PID<0.634.0>
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 204}
p3 - has recieved a proposal of val: {:val, 204}
p5 - has recieved a proposal of val: {:val, 204}
p4 - proposal recieved v: {:val, 204}
p3 - proposal recieved v: {:val, 204}
p5 - proposal recieved v: {:val, 204}
p3 - p3 has started a ballot! b-0
p4 - sending a prepared to leader! | leader: :p3
p3 - sending a prepared to leader! | leader: :p3
p5 - sending a prepared to leader! | leader: :p3
p4 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p3
                  b - 1 | a_bal -  | a_val -  
p3 - Quorum: 1
p3 - Quorum: 2
p3 - Quorum: 3
p3 -` Quorum Met! 3 state - %{name: :p3, participants: [:p4, :p1, :p2, :p3, :p5], leader: :p3, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 204}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p3 - [a_val == nil] Setting v <- {:val, 204} 
p3 - has sent to participants to accept
p4 - p4 has accepted bal: 1 | v: {:val, 204}
p3 - p3 has accepted bal: 1 | v: {:val, 204}
p5 - p5 has accepted bal: 1 | v: {:val, 204}
p3 - Quorum 2 Met! cnt: 3
p3 is sending decision {:val, 204}
p4 - Updated Map %{1 => {:val, 204}} | Parent: #PID<0.634.0>
p3 - Updated Map %{1 => {:val, 204}} | Parent: nil
p5 - Updated Map %{1 => {:val, 204}} | Parent: nil
p4 - sending to parent process #PID<0.634.0> value {:val, 204}
returning v in :propose_responce {:val, 204}
p3: decided {:val, 204}
p5: decided {:val, 204}
p4: decided {:val, 204}
p4: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
PASS
:p5: started
:p3: started
:p4: started
:p2: started
:p1: started
p5 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.650.0>
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 210}
p2 - has recieved a proposal of val: {:val, 210}
p1 - has recieved a proposal of val: {:val, 210}
p5 - proposal recieved v: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p5, :p3, :p4, :p2, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p5 - p5 has accepted bal: 1 | v: {:val, 210}
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: nil
p5 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.650.0>
p2 - Updated Map %{1 => {:val, 210}} | Parent: nil
p5 - sending to parent process #PID<0.650.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p2: decided {:val, 210}
p1: decided {:val, 210}
p5: decided {:val, 210}
p5: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p2: started
:p4: started
:p5: started
:p3: started
:p1: started
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.666.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 210}
p3 - has recieved a proposal of val: {:val, 210}
p1 - has recieved a proposal of val: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p3 - proposal recieved v: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p4, :p5, :p3, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p3 - p3 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: nil
p2 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.666.0>
p3 - Updated Map %{1 => {:val, 210}} | Parent: nil
p2 - sending to parent process #PID<0.666.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p3: decided {:val, 210}
p1: decided {:val, 210}
p2: decided {:val, 210}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p1: started
:p5: started
:p3: started
:p2: started
:p4: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 210} to the leader! Broad-Parent: #PID<0.682.0>
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p4 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 210}
p2 - has recieved a proposal of val: {:val, 210}
p4 - has recieved a proposal of val: {:val, 210}
p1 - proposal recieved v: {:val, 210}
p2 - proposal recieved v: {:val, 210}
p4 - proposal recieved v: {:val, 210}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p1, :p5, :p3, :p2, :p4], leader: :p1, parent_name: #PID<0.682.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 210}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 210} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 210}
p2 - p2 has accepted bal: 1 | v: {:val, 210}
p4 - p4 has accepted bal: 1 | v: {:val, 210}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 210}
p1 - Updated Map %{1 => {:val, 210}} | Parent: #PID<0.682.0>
p2 - Updated Map %{1 => {:val, 210}} | Parent: nil
p4 - Updated Map %{1 => {:val, 210}} | Parent: nil
p1 - sending to parent process #PID<0.682.0> value {:val, 210}
returning v in :propose_responce {:val, 210}
p2: decided {:val, 210}
p4: decided {:val, 210}
p1: decided {:val, 210}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
PASS
============

============
"Leader crashes, no concurrent ballots, 5 nodes", 10 times
============
:p2: started
:p1: started
:p3: started
:p4: started
:p5: started
p1 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p3 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p5 - has recieved a proposal of val: {:val, 201}
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p5 - proposal recieved v: {:val, 201}
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p5 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.109.0>
p5 - sending a prepared to leader! | leader: :p1
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p2 - has updated instance_num 1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - has recieved a proposal of val: {:val, 202}
p3 - has recieved a proposal of val: {:val, 202}
p2 - has recieved a proposal of val: {:val, 202}
p5 - has updated instance_num 1
p4 - proposal recieved v: {:val, 202}
p3 - proposal recieved v: {:val, 202}
p5 - has recieved a proposal of val: {:val, 202}
p2 - proposal recieved v: {:val, 202}
p5 - proposal recieved v: {:val, 202}
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p5, :p3, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p1 - has updated instance_num 1
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p1 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p1 - p1 has started a ballot! b-0
p1 - Quorum: 1
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: true, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p5, :p3, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: true, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p5, :p3, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Quorum: 2
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p4 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
returning v in :propose_responce {:val, 202}
p4 - sending to parent process #PID<0.126.0> value {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
returning v in :propose_responce {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 is sending decision {:val, 202}
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 is sending decision {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p1 is sending decision {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p1 is sending decision {:val, 202}
p4 - sending to parent process #PID<0.126.0> value {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 202}
p1: decided {:val, 202}
p2: decided {:val, 202}
p3: decided {:val, 202}
p5: decided {:val, 202}
p5: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
:p4: started
:p5: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 207} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 207}
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - proposal recieved v: {:val, 207}
p1 - has recieved a proposal of val: {:val, 207}
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p1 - proposal recieved v: {:val, 207}
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - p1 has started a ballot! b-0
p3 - has recieved a proposal of val: {:val, 201}
p4 - has recieved a proposal of val: {:val, 207}
p1 - has updated instance_num 1
p4 - proposal recieved v: {:val, 207}
p3 - proposal recieved v: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p4 - has updated instance_num 1
p3 - sending a prepared to leader! | leader: :p1
p1 - proposal recieved v: {:val, 201}
p2 - has recieved a proposal of val: {:val, 207}
p2 - proposal recieved v: {:val, 207}
p4 - has recieved a proposal of val: {:val, 201}
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - has updated instance_num 1
p1 - p1 has started a ballot! b-0
p2 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p5 - has recieved a proposal of val: {:val, 207}
p1 - sending a prepared to leader! | leader: :p1
p2 - proposal recieved v: {:val, 201}
p3 - sending a prepared to leader! | leader: :p1
p5 - proposal recieved v: {:val, 207}
p4 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - has updated instance_num 1
p2 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - has recieved a proposal of val: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 2
p1 - Quorum: 3
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p4, :p5, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p4, :p5, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p4, :p5, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 201}
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2: decided {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p1: decided {:val, 201}
p5: decided {:val, 201}
p4: decided {:val, 201}
p4: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p5: started
:p4: started
:p3: started
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p1 - has updated instance_num 1
p2 - proposal recieved v: {:val, 201}
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p3 - has updated instance_num 1
p4 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p4 - sending a prepared to leader! | leader: :p1
p1 - proposal recieved v: {:val, 201}
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p1 - p1 has started a ballot! b-0
p2 - proposal recieved v: {:val, 201}
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sending a prepared to leader! | leader: :p1
p5 - has recieved a proposal of val: {:val, 201}
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has recieved a proposal of val: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p2 - sending a prepared to leader! | leader: :p1
p3 - proposal recieved v: {:val, 201}
p5 - has updated instance_num 1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has updated instance_num 1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - has recieved a proposal of val: {:val, 201}
p1 - Quorum: 1
p3 - has recieved a proposal of val: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p1 - sending a prepared to leader! | leader: :p1
p3 - proposal recieved v: {:val, 201}
p5 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 2
p1 - Quorum: 3
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p2, :p1, :p5, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p2, :p1, :p5, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p2, :p1, :p5, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 is sending decision {:val, 201}
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p1: decided {:val, 201}
p5: decided {:val, 201}
p3: decided {:val, 201}
p2: decided {:val, 201}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p2: started
:p3: started
:p1: started
:p4: started
:p5: started
p4 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p4 - has updated instance_num 1
p2 - proposal recieved v: {:val, 201}
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p4 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p5 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.109.0>
p1 - proposal recieved v: {:val, 201}
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - p1 has started a ballot! b-0
p2 - has recieved a proposal of val: {:val, 202}
p4 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 202}
p1 - has updated instance_num 1
p2 - proposal recieved v: {:val, 202}
p4 - has recieved a proposal of val: {:val, 202}
p3 - has updated instance_num 1
p5 - proposal recieved v: {:val, 202}
p1 - has recieved a proposal of val: {:val, 202}
p2 - sending a prepared to leader! | leader: :p1
p3 - has recieved a proposal of val: {:val, 202}
p5 - sending a prepared to leader! | leader: :p1
p4 - proposal recieved v: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - proposal recieved v: {:val, 202}
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sending a prepared to leader! | leader: :p1
p1 - p1 has started a ballot! b-0
p3 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p2, :p5, :p1, :p4, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum: 2
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p2, :p5, :p1, :p4, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p2, :p5, :p1, :p4, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p2 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - sending to parent process #PID<0.126.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p2 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 is sending decision {:val, 202}
returning v in :propose_responce {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p2 - sending to parent process #PID<0.126.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 is sending decision {:val, 202}
p2 - sending to parent process #PID<0.126.0> value {:val, 202}
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 202}} | Parent: nil
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - sending to parent process #PID<0.126.0> value {:val, 202}
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p3: decided {:val, 202}
p1: decided {:val, 202}
p4: decided {:val, 202}
p5: decided {:val, 202}
p4: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p3: started
:p4: started
:p2: started
:p1: started
:p5: started
p1 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 207} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 207}
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - proposal recieved v: {:val, 207}
p5 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 207}
p1 - proposal recieved v: {:val, 207}
p1 - p1 has started a ballot! b-0
p4 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 207}
p5 - proposal recieved v: {:val, 207}
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - has recieved a proposal of val: {:val, 207}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - proposal recieved v: {:val, 207}
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - has recieved a proposal of val: {:val, 207}
p4 - proposal recieved v: {:val, 207}
p4 - sending a prepared to leader! | leader: :p1
p2 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p2 - sending a prepared to leader! | leader: :p1
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p2 - has updated instance_num 1
p3 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p2 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 207}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p2, :p5, :p4, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 207} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 207}
p2 - p2 has accepted bal: 1 | v: {:val, 207}
p5 - p5 has accepted bal: 1 | v: {:val, 207}
p4 - p4 has accepted bal: 1 | v: {:val, 207}
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - Quorum: 1
p3 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p1 - p1 has accepted bal: 1 | v: {:val, 207}
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: true, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p3, :p2, :p5, :p4, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum: 1
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
returning v in :propose_responce {:val, 201}
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p3 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
returning v in :propose_responce {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 is sending decision {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4: decided {:val, 201}
p1: decided {:val, 201}
p5: decided {:val, 201}
p2: decided {:val, 201}
p1: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p4: started
:p2: started
:p1: started
:p3: started
:p5: started
p3 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p4 - proposal recieved v: {:val, 201}
p2 - has recieved a proposal of val: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - has updated instance_num 1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has recieved a proposal of val: {:val, 201}
p1 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.126.0>
p3 - proposal recieved v: {:val, 201}
p5 - has updated instance_num 1
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - has updated instance_num 1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p4 - has recieved a proposal of val: {:val, 209}
p1 - Quorum: 2
p4 - proposal recieved v: {:val, 209}
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p1 - Quorum: 1
p5 - has recieved a proposal of val: {:val, 201}
p4 - sending a prepared to leader! | leader: :p1
p5 - proposal recieved v: {:val, 201}
p1 - Quorum: 2
p2 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has updated instance_num 1
p1 - Quorum: 3
p3 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p3 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 209}
p5 - proposal recieved v: {:val, 209}
p5 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p4, :p1, :p3, :p2, :p5]}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p4, :p1, :p3, :p2, :p5]}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 209}
p4 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p1 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 209}
p1 - sending to parent process #PID<0.126.0> value {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 209}
p4 - sending to parent process #PID<0.126.0> value {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 209}
p1 - sending to parent process #PID<0.126.0> value {:val, 209}
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 209}
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 209}
p4 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2: decided {:val, 209}
p3: decided {:val, 209}
p5: decided {:val, 209}
p1: decided {:val, 209}
p1: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p2: started
:p5: started
:p3: started
:p1: started
:p4: started
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - with 1 has proposed {:val, 207} to the leader! Broad-Parent: #PID<0.126.0>
p5 - has updated instance_num 1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 201}
p2 - has recieved a proposal of val: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p3 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 207}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - has recieved a proposal of val: {:val, 201}
p3 - has updated instance_num 1
p1 - Quorum: 1
p4 - proposal recieved v: {:val, 207}
p2 - has updated instance_num 1
p5 - proposal recieved v: {:val, 201}
p3 - has recieved a proposal of val: {:val, 207}
p1 - Quorum: 2
p5 - sending a prepared to leader! | leader: :p1
p3 - proposal recieved v: {:val, 207}
p2 - has recieved a proposal of val: {:val, 207}
p1 - has updated instance_num 1
p2 - proposal recieved v: {:val, 207}
p1 - has recieved a proposal of val: {:val, 207}
p1 - proposal recieved v: {:val, 207}
p1 - p1 has started a ballot! b-0
p1 - Quorum: 1
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 2
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p5 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 207}
p5 - proposal recieved v: {:val, 207}
p5 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 207}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p3, :p5, :p2, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 207} 
p1 - has sent to participants to accept
p1 - sending a prepared to leader! | leader: :p1
p4 - p4 has accepted bal: 1 | v: {:val, 207}
p3 - p3 has accepted bal: 1 | v: {:val, 207}
p5 - p5 has accepted bal: 1 | v: {:val, 207}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - p2 has accepted bal: 1 | v: {:val, 207}
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 207}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p4, :p3, :p5, :p2, :p1]}
p1 - [a_val == nil] Setting v <- {:val, 207} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 207}
p5 - p5 has accepted bal: 1 | v: {:val, 207}
p3 - p3 has accepted bal: 1 | v: {:val, 207}
p1 - p1 has accepted bal: 1 | v: {:val, 207}
p2 - p2 has accepted bal: 1 | v: {:val, 207}
p1 - Quorum: 2
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 207}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 207}
p1 - p1 has accepted bal: 1 | v: {:val, 207}
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
p1 is sending decision {:val, 207}
p1 - Updated Map %{1 => {:val, 207}} | Parent: nil
p1 - Updated Map %{1 => {:val, 207}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 207}
p1 - Updated Map %{1 => {:val, 207}} | Parent: nil
p1 - Updated Map %{1 => {:val, 207}} | Parent: nil
p3 - sending to parent process #PID<0.126.0> value {:val, 207}
p3 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 207}
p3 - sending to parent process #PID<0.126.0> value {:val, 207}
p3 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 207}
p3 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 207}
p5 - Updated Map %{1 => {:val, 207}} | Parent: nil
p2 - Updated Map %{1 => {:val, 207}} | Parent: nil
p5 - Updated Map %{1 => {:val, 207}} | Parent: nil
p5 - Updated Map %{1 => {:val, 207}} | Parent: nil
p2 - Updated Map %{1 => {:val, 207}} | Parent: nil
p5 - Updated Map %{1 => {:val, 207}} | Parent: nil
p2 - Updated Map %{1 => {:val, 207}} | Parent: nil
p2 - Updated Map %{1 => {:val, 207}} | Parent: nil
p4 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 207}
p4 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 207}
p4 - sending to parent process #PID<0.126.0> value {:val, 207}
p4 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 207}
p4 - Updated Map %{1 => {:val, 207}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 207}
p2: decided {:val, 207}
p5: decided {:val, 207}
p1: decided {:val, 207}
p3: decided {:val, 207}
p5: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p4: started
:p3: started
:p2: started
:p5: started
:p1: started
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p5 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.109.0>
p5 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 202}
p3 - has updated instance_num 1
p5 - proposal recieved v: {:val, 202}
p3 - has recieved a proposal of val: {:val, 202}
p3 - proposal recieved v: {:val, 202}
p4 - has updated instance_num 1
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 202}
p4 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 202}
p2 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p1 - p1 has started a ballot! b-0
p4 - proposal recieved v: {:val, 202}
p2 - has updated instance_num 1
p1 - sending a prepared to leader! | leader: :p1
p5 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 202}
p3 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p4 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 202}
p3 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p2 - has updated instance_num 1
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - has recieved a proposal of val: {:val, 201}
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - proposal recieved v: {:val, 201}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - has updated instance_num 1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - Quorum: 1
p5 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 2
p3 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p2, :p1, :p4, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p2, :p1, :p4, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p2, :p1, :p4, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 201}
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p5 - sending to parent process #PID<0.109.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p1 is sending decision {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p5 - sending to parent process #PID<0.109.0> value {:val, 201}
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p1 is sending decision {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4: decided {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p2 - sending to parent process #PID<0.126.0> value {:val, 201}
p5 - sending to parent process #PID<0.109.0> value {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.109.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 201}
p3: decided {:val, 201}
p1: decided {:val, 201}
p2: decided {:val, 201}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p5: started
:p2: started
:p1: started
:p3: started
:p4: started
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.126.0>
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.126.0>
p1 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 209}
p4 - has updated instance_num 1
p1 - proposal recieved v: {:val, 209}
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 209}
p1 - p1 has started a ballot! b-0
p2 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 209}
p2 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - has updated instance_num 1
p4 - proposal recieved v: {:val, 209}
p2 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p4 - has updated instance_num 1
p3 - proposal recieved v: {:val, 201}
p4 - has recieved a proposal of val: {:val, 201}
p1 - has updated instance_num 1
p4 - proposal recieved v: {:val, 201}
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 209}
p1 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p1
p5 - has updated instance_num 1
p1 - sending a prepared to leader! | leader: :p1
p5 - has recieved a proposal of val: {:val, 201}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - proposal recieved v: {:val, 201}
p5 - sending a prepared to leader! | leader: :p1
p1 - Quorum: 1
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 2
p2 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 3
p3 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p4, :p1, :p5, :p2, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p4, :p1, :p5, :p2, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p1 - Quorum: 2
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 3
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: #PID<0.126.0>, participants: [:p4, :p1, :p5, :p2, :p3]}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - sending to parent process #PID<0.126.0> value {:val, 201}
p1 - Quorum 2 Met! cnt: 3
returning v in :propose_responce {:val, 201}
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - sending to parent process #PID<0.126.0> value {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p1 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 201}
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.126.0>
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.126.0> value {:val, 201}
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5: decided {:val, 201}
p2: decided {:val, 201}
p3: decided {:val, 201}
p1: decided {:val, 201}
p2: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p3: started
:p2: started
:p4: started
:p5: started
:p1: started
p3 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 207} to the leader! Broad-Parent: #PID<0.126.0>
p3 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 207}
p2 - has updated instance_num 1
p5 - with 1 has proposed {:val, 202} to the leader! Broad-Parent: #PID<0.109.0>
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p3 - proposal recieved v: {:val, 207}
p2 - has recieved a proposal of val: {:val, 207}
p5 - has recieved a proposal of val: {:val, 207}
p4 - has recieved a proposal of val: {:val, 207}
p3 - has updated instance_num 1
p2 - proposal recieved v: {:val, 207}
p5 - proposal recieved v: {:val, 207}
p4 - proposal recieved v: {:val, 207}
p1 - has recieved a proposal of val: {:val, 207}
p3 - has recieved a proposal of val: {:val, 202}
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 202}
p4 - has recieved a proposal of val: {:val, 202}
p1 - proposal recieved v: {:val, 207}
p1 - p1 has started a ballot! b-0
p2 - has recieved a proposal of val: {:val, 202}
p1 - has updated instance_num 1
p4 - proposal recieved v: {:val, 202}
p3 - proposal recieved v: {:val, 202}
p2 - proposal recieved v: {:val, 202}
p5 - proposal recieved v: {:val, 202}
p1 - has recieved a proposal of val: {:val, 202}
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - proposal recieved v: {:val, 202}
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p3, :p4, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - sending a prepared to leader! | leader: :p1
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p3, :p4, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum: 2
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, decided: false, instance_decision: %{}, instance_state: %{1 => %{timeout: 10000, v: {:val, 202}, quorums: 3, a_val_list: [nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil, nil: nil], a_bal: nil, a_val: nil, bal: 0}}, leader: :p1, parent_name: nil, participants: [:p5, :p3, :p4, :p1, :p2]}
p1 - [a_val == nil] Setting v <- {:val, 202} 
p1 - has sent to participants to accept
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p3 - p3 has accepted bal: 1 | v: {:val, 202}
p4 - p4 has accepted bal: 1 | v: {:val, 202}
p2 - p2 has accepted bal: 1 | v: {:val, 202}
p5 - p5 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum: 1
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
returning v in :propose_responce {:val, 202}
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - p1 has accepted bal: 1 | v: {:val, 202}
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p1 is sending decision {:val, 202}
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p2 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p1 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.109.0>
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
returning v in :propose_responce {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p5 - sending to parent process #PID<0.109.0> value {:val, 202}
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p4 - Updated Map %{1 => {:val, 202}} | Parent: nil
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
p3 - Updated Map %{1 => {:val, 202}} | Parent: #PID<0.126.0>
p3 - sending to parent process #PID<0.126.0> value {:val, 202}
p2: decided {:val, 202}
p4: decided {:val, 202}
p1: decided {:val, 202}
p3: decided {:val, 202}
p1: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
============

============
"Leader crashes, no concurrent ballots, 5 local procs", 10 times
============
:p2: started
:p3: started
:p4: started
:p5: started
:p1: started
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.858.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p5 - has recieved a proposal of val: {:val, 208}
p1 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p5 - proposal recieved v: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p3, :p4, :p5, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p4 - p4 has accepted bal: 1 | v: {:val, 208}
p5 - p5 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.858.0>
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 is sending decision {:val, 208}
p2 - sending to parent process #PID<0.858.0> value {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.858.0>
returning v in :propose_responce {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.858.0> value {:val, 208}
p3 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.859.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p3 - has recieved a proposal of val: {:val, 209}
p4 - has recieved a proposal of val: {:val, 209}
p5 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p4 - proposal recieved v: {:val, 209}
p5 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p3, :p4, :p5, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 208}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p4 - p4 has accepted bal: 1 | v: {:val, 209}
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.859.0>
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p1 is sending decision {:val, 209}
p3 - sending to parent process #PID<0.859.0> value {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.859.0>
returning v in :propose_responce {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.859.0> value {:val, 209}
p4: decided {:val, 209}
p5: decided {:val, 209}
p1: decided {:val, 209}
p3: decided {:val, 209}
p3: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
:p4: started
:p5: started
p5 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.874.0>
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p1 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p5 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p5 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p1, :p3, :p4, :p5], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p4 - p4 has accepted bal: 1 | v: {:val, 208}
p5 - p5 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.874.0>
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.874.0> value {:val, 208}
p1 is sending decision {:val, 208}
returning v in :propose_responce {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.874.0>
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.874.0> value {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.875.0>
p1 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p4 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p1, :p3, :p4, :p5], leader: :p1, parent_name: #PID<0.875.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 208}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.875.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - sending to parent process #PID<0.875.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p3: decided {:val, 201}
p4: decided {:val, 201}
p5: decided {:val, 201}
p1: decided {:val, 201}
p1: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
PASS
:p2: started
:p5: started
:p4: started
:p3: started
:p1: started
p2 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.890.0>
p2 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p5 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p1 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p5 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p5, :p4, :p3, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p5 - p5 has accepted bal: 1 | v: {:val, 208}
p4 - p4 has accepted bal: 1 | v: {:val, 208}
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.890.0>
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 is sending decision {:val, 208}
p2 - sending to parent process #PID<0.890.0> value {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.890.0>
returning v in :propose_responce {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.890.0> value {:val, 208}
p5 - with 1 has proposed {:val, 204} to the leader! Broad-Parent: #PID<0.891.0>
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 204}
p4 - has recieved a proposal of val: {:val, 204}
p3 - has recieved a proposal of val: {:val, 204}
p1 - has recieved a proposal of val: {:val, 204}
p5 - proposal recieved v: {:val, 204}
p4 - proposal recieved v: {:val, 204}
p3 - proposal recieved v: {:val, 204}
p1 - proposal recieved v: {:val, 204}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p5, :p4, :p3, :p1], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 204}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 208}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 204} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 204}
p4 - p4 has accepted bal: 1 | v: {:val, 204}
p3 - p3 has accepted bal: 1 | v: {:val, 204}
p1 - p1 has accepted bal: 1 | v: {:val, 204}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 204}
p1 - Updated Map %{1 => {:val, 204}} | Parent: nil
p5 - Updated Map %{1 => {:val, 204}} | Parent: #PID<0.891.0>
p4 - Updated Map %{1 => {:val, 204}} | Parent: nil
p3 - Updated Map %{1 => {:val, 204}} | Parent: nil
p5 - sending to parent process #PID<0.891.0> value {:val, 204}
returning v in :propose_responce {:val, 204}
p4: decided {:val, 204}
p3: decided {:val, 204}
p1: decided {:val, 204}
p5: decided {:val, 204}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
PASS
:p4: started
:p3: started
:p5: started
:p1: started
:p2: started
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.906.0>
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p2 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p4, :p3, :p5, :p1, :p2], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.906.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.906.0> value {:val, 201}
p1 is sending decision {:val, 201}
returning v in :propose_responce {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.906.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.906.0> value {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.907.0>
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 209}
p5 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p2 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p5 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p4, :p3, :p5, :p1, :p2], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 201}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.907.0>
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.907.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p5: decided {:val, 209}
p1: decided {:val, 209}
p2: decided {:val, 209}
p3: decided {:val, 209}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p2: started
:p1: started
:p3: started
:p5: started
:p4: started
p4 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.922.0>
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p1 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p5 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p5 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p1, :p3, :p5, :p4], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p5 - p5 has accepted bal: 1 | v: {:val, 208}
p4 - p4 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.922.0>
p1 - Quorum 2 Met! cnt: 3
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.922.0> value {:val, 208}
p1 is sending decision {:val, 208}
returning v in :propose_responce {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.922.0>
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.922.0> value {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.923.0>
p1 - has updated instance_num 1
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p4 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p1, :p3, :p5, :p4], leader: :p1, parent_name: #PID<0.923.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 208}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.923.0>
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - sending to parent process #PID<0.923.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p3: decided {:val, 201}
p5: decided {:val, 201}
p4: decided {:val, 201}
p1: decided {:val, 201}
p1: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
PASS
:p3: started
:p4: started
:p2: started
:p1: started
:p5: started
p5 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.938.0>
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 209}
p4 - has recieved a proposal of val: {:val, 209}
p2 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p5 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p4 - proposal recieved v: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p5 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p3, :p4, :p2, :p1, :p5], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p4 - p4 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.938.0>
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.938.0> value {:val, 209}
p1 is sending decision {:val, 209}
returning v in :propose_responce {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.938.0>
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.938.0> value {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.939.0>
p4 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has recieved a proposal of val: {:val, 201}
p2 - has recieved a proposal of val: {:val, 201}
p1 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p3, :p4, :p2, :p1, :p5], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 209}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p4 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.939.0>
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - sending to parent process #PID<0.939.0> value {:val, 201}
returning v in :propose_responce {:val, 201}
p2: decided {:val, 201}
p1: decided {:val, 201}
p5: decided {:val, 201}
p4: decided {:val, 201}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
PASS
:p2: started
:p3: started
:p1: started
:p5: started
:p4: started
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.954.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p1 - has recieved a proposal of val: {:val, 208}
p5 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p5 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p3, :p1, :p5, :p4], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 208}
p4 - p4 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.954.0>
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.954.0> value {:val, 208}
p1 is sending decision {:val, 208}
returning v in :propose_responce {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.954.0>
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p5 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.954.0> value {:val, 208}
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.955.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p1 - has updated instance_num 1
p5 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 209}
p3 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p5 - has recieved a proposal of val: {:val, 209}
p4 - has recieved a proposal of val: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p5 - proposal recieved v: {:val, 209}
p4 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p3 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p2, :p3, :p1, :p5, :p4], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 208}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 1
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p4 - p4 has accepted bal: 1 | v: {:val, 209}
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.955.0>
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.955.0> value {:val, 209}
returning v in :propose_responce {:val, 209}
p1: decided {:val, 209}
p5: decided {:val, 209}
p4: decided {:val, 209}
p3: decided {:val, 209}
p3: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p5: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
PASS
:p3: started
:p5: started
:p1: started
:p4: started
:p2: started
p2 - Leader p1 is the new leader!
p5 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - with 1 has proposed {:val, 209} to the leader! Broad-Parent: #PID<0.970.0>
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has recieved a proposal of val: {:val, 209}
p5 - has recieved a proposal of val: {:val, 209}
p1 - has recieved a proposal of val: {:val, 209}
p4 - has recieved a proposal of val: {:val, 209}
p2 - has recieved a proposal of val: {:val, 209}
p3 - proposal recieved v: {:val, 209}
p5 - proposal recieved v: {:val, 209}
p1 - proposal recieved v: {:val, 209}
p4 - proposal recieved v: {:val, 209}
p2 - proposal recieved v: {:val, 209}
p1 - p1 has started a ballot! b-0
p3 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p3, :p5, :p1, :p4, :p2], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 209}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 209} 
p1 - has sent to participants to accept
p3 - p3 has accepted bal: 1 | v: {:val, 209}
p5 - p5 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 209}
p2 - p2 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 209}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.970.0>
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.970.0> value {:val, 209}
p1 is sending decision {:val, 209}
returning v in :propose_responce {:val, 209}
p3 - Updated Map %{1 => {:val, 209}} | Parent: #PID<0.970.0>
p5 - Updated Map %{1 => {:val, 209}} | Parent: nil
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p4 - Updated Map %{1 => {:val, 209}} | Parent: nil
p2 - Updated Map %{1 => {:val, 209}} | Parent: nil
p3 - sending to parent process #PID<0.970.0> value {:val, 209}
p1 - Updated Map %{1 => {:val, 209}} | Parent: nil
p5 - with 1 has proposed {:val, 204} to the leader! Broad-Parent: #PID<0.971.0>
p3 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has updated instance_num 1
p4 - has updated instance_num 1
p2 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 204}
p1 - has recieved a proposal of val: {:val, 204}
p4 - has recieved a proposal of val: {:val, 204}
p2 - has recieved a proposal of val: {:val, 204}
p5 - proposal recieved v: {:val, 204}
p1 - proposal recieved v: {:val, 204}
p4 - proposal recieved v: {:val, 204}
p2 - proposal recieved v: {:val, 204}
p1 - p1 has started a ballot! b-0
p5 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p3, :p5, :p1, :p4, :p2], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 204}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 209}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 204} 
p1 - has sent to participants to accept
p5 - p5 has accepted bal: 1 | v: {:val, 204}
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 204}
p2 - p2 has accepted bal: 1 | v: {:val, 204}
p1 - p1 has accepted bal: 1 | v: {:val, 204}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 204}
p5 - Updated Map %{1 => {:val, 204}} | Parent: #PID<0.971.0>
p1 - Updated Map %{1 => {:val, 204}} | Parent: nil
p4 - Updated Map %{1 => {:val, 204}} | Parent: nil
p2 - Updated Map %{1 => {:val, 204}} | Parent: nil
p5 - sending to parent process #PID<0.971.0> value {:val, 204}
returning v in :propose_responce {:val, 204}
p1: decided {:val, 204}
p4: decided {:val, 204}
p2: decided {:val, 204}
p5: decided {:val, 204}
p5: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p2: {:message_queue_len, 0}
PASS
:p5: started
:p2: started
:p1: started
:p4: started
:p3: started
p5 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p5 - with 1 has proposed {:val, 204} to the leader! Broad-Parent: #PID<0.986.0>
p5 - has updated instance_num 1
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p5 - has recieved a proposal of val: {:val, 204}
p2 - has recieved a proposal of val: {:val, 204}
p1 - has recieved a proposal of val: {:val, 204}
p4 - has recieved a proposal of val: {:val, 204}
p3 - has recieved a proposal of val: {:val, 204}
p5 - proposal recieved v: {:val, 204}
p2 - proposal recieved v: {:val, 204}
p1 - proposal recieved v: {:val, 204}
p4 - proposal recieved v: {:val, 204}
p3 - proposal recieved v: {:val, 204}
p1 - p1 has started a ballot! b-0
p5 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p5, :p2, :p1, :p4, :p3], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 204}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 204} 
p1 - has sent to participants to accept
p5 - p5 has accepted bal: 1 | v: {:val, 204}
p2 - p2 has accepted bal: 1 | v: {:val, 204}
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 204}
p3 - p3 has accepted bal: 1 | v: {:val, 204}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 204}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 204}
p5 - Updated Map %{1 => {:val, 204}} | Parent: #PID<0.986.0>
p2 - Updated Map %{1 => {:val, 204}} | Parent: nil
p1 - Quorum 2 Met! cnt: 3
p4 - Updated Map %{1 => {:val, 204}} | Parent: nil
p3 - Updated Map %{1 => {:val, 204}} | Parent: nil
p5 - sending to parent process #PID<0.986.0> value {:val, 204}
p1 is sending decision {:val, 204}
returning v in :propose_responce {:val, 204}
p5 - Updated Map %{1 => {:val, 204}} | Parent: #PID<0.986.0>
p2 - Updated Map %{1 => {:val, 204}} | Parent: nil
p1 - Updated Map %{1 => {:val, 204}} | Parent: nil
p4 - Updated Map %{1 => {:val, 204}} | Parent: nil
p3 - Updated Map %{1 => {:val, 204}} | Parent: nil
p5 - sending to parent process #PID<0.986.0> value {:val, 204}
p1 - Updated Map %{1 => {:val, 204}} | Parent: nil
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.987.0>
p2 - has updated instance_num 1
p1 - has updated instance_num 1
p4 - has updated instance_num 1
p3 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p1 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p1 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p1 - p1 has started a ballot! b-0
p2 - sending a prepared to leader! | leader: :p1
p1 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p5, :p2, :p1, :p4, :p3], leader: :p1, parent_name: nil, instance_state: %{1 => %{timeout: 10000, v: {:val, 208}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{1 => {:val, 204}}, decided: true}
p1 - [a_val == nil] Setting v <- {:val, 208} 
p1 - has sent to participants to accept
p2 - p2 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum: 1
p4 - p4 has accepted bal: 1 | v: {:val, 208}
p3 - p3 has accepted bal: 1 | v: {:val, 208}
p1 - p1 has accepted bal: 1 | v: {:val, 208}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 208}
p2 - Updated Map %{1 => {:val, 208}} | Parent: #PID<0.987.0>
p1 - Updated Map %{1 => {:val, 208}} | Parent: nil
p4 - Updated Map %{1 => {:val, 208}} | Parent: nil
p3 - Updated Map %{1 => {:val, 208}} | Parent: nil
p2 - sending to parent process #PID<0.987.0> value {:val, 208}
returning v in :propose_responce {:val, 208}
p1: decided {:val, 208}
p4: decided {:val, 208}
p3: decided {:val, 208}
p2: decided {:val, 208}
p2: {:message_queue_len, 0}
p1: {:message_queue_len, 0}
p4: {:message_queue_len, 0}
p3: {:message_queue_len, 0}
PASS
:p1: started
:p2: started
:p3: started
:p4: started
:p5: started
p5 - Leader p1 is the new leader!
p2 - Leader p1 is the new leader!
p1 - Leader p1 is the new leader!
p3 - Leader p1 is the new leader!
p4 - Leader p1 is the new leader!
p1 - with 1 has proposed {:val, 201} to the leader! Broad-Parent: #PID<0.1002.0>
p1 - has updated instance_num 1
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has updated instance_num 1
p1 - has recieved a proposal of val: {:val, 201}
p2 - has recieved a proposal of val: {:val, 201}
p3 - has recieved a proposal of val: {:val, 201}
p4 - has recieved a proposal of val: {:val, 201}
p5 - has recieved a proposal of val: {:val, 201}
p1 - proposal recieved v: {:val, 201}
p2 - proposal recieved v: {:val, 201}
p3 - proposal recieved v: {:val, 201}
p4 - proposal recieved v: {:val, 201}
p5 - proposal recieved v: {:val, 201}
p1 - p1 has started a ballot! b-0
p1 - sending a prepared to leader! | leader: :p1
p2 - sending a prepared to leader! | leader: :p1
p3 - sending a prepared to leader! | leader: :p1
p4 - sending a prepared to leader! | leader: :p1
p5 - sending a prepared to leader! | leader: :p1
p1 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p2 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p3 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p4 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p5 - sent prepared to p1
                  b - 1 | a_bal -  | a_val -  
p1 - Quorum: 1
p1 - Quorum: 2
p1 - Quorum: 3
p1 -` Quorum Met! 3 state - %{name: :p1, participants: [:p1, :p2, :p3, :p4, :p5], leader: :p1, parent_name: #PID<0.1002.0>, instance_state: %{1 => %{timeout: 10000, v: {:val, 201}, bal: 0, a_bal: nil, a_val: nil, a_val_list: [nil: nil, nil: nil, nil: nil], quorums: 3}}, instance_decision: %{}, decided: false}
p1 - [a_val == nil] Setting v <- {:val, 201} 
p1 - has sent to participants to accept
p1 - Quorum: 1
p2 - p2 has accepted bal: 1 | v: {:val, 201}
p3 - p3 has accepted bal: 1 | v: {:val, 201}
p4 - p4 has accepted bal: 1 | v: {:val, 201}
p5 - p5 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum: 2
p1 - p1 has accepted bal: 1 | v: {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p1 is sending decision {:val, 201}
p1 - Quorum 2 Met! cnt: 3
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 is sending decision {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.1002.0>
p2 - Updated Map %{1 => {:val, 201}} | Parent: nil
p3 - Updated Map %{1 => {:val, 201}} | Parent: nil
p4 - Updated Map %{1 => {:val, 201}} | Parent: nil
p5 - Updated Map %{1 => {:val, 201}} | Parent: nil
p1 - sending to parent process #PID<0.1002.0> value {:val, 201}
p1 - Updated Map %{1 => {:val, 201}} | Parent: #PID<0.1002.0>
returning v in :propose_responce {:val, 201}
p1 - sending to parent process #PID<0.1002.0> value {:val, 201}
p2 - with 1 has proposed {:val, 208} to the leader! Broad-Parent: #PID<0.1003.0>
p2 - has updated instance_num 1
p3 - has updated instance_num 1
p4 - has updated instance_num 1
p5 - has updated instance_num 1
p2 - has recieved a proposal of val: {:val, 208}
p3 - has recieved a proposal of val: {:val, 208}
p4 - has recieved a proposal of val: {:val, 208}
p5 - has recieved a proposal of val: {:val, 208}
p2 - proposal recieved v: {:val, 208}
p3 - proposal recieved v: {:val, 208}
p4 - proposal recieved v: {:val, 208}
p5 - proposal recieved v: {:val, 208}
p3: decided {:val, 201}
p4: decided {:val, 201}
p5: decided {:val, 201}
p2 - Leader p2 is the new leader!
p3 - Leader p2 is the new leader!
p4 - Leader p2 is the new leader!
p5 - Leader p2 is the new leader!
